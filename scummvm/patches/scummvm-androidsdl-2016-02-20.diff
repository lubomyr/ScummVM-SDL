diff --git a/audio/rate.cpp b/audio/rate.cpp
index 6264465..19d9c8c 100644
--- a/audio/rate.cpp
+++ b/audio/rate.cpp
@@ -46,16 +46,6 @@ namespace Audio {
  */
 #define INTERMEDIATE_BUFFER_SIZE 512
 
-/**
- * The default fractional type in frac.h (with 16 fractional bits) limits
- * the rate conversion code to 65536Hz audio: we need to able to handle
- * 96kHz audio, so we use fewer fractional bits in this code.
- */
-enum {
-	FRAC_BITS_LOW = 15,
-	FRAC_ONE_LOW = (1L << FRAC_BITS_LOW),
-	FRAC_HALF_LOW = (1L << (FRAC_BITS_LOW-1))
-};
 
 /**
  * Audio rate converter based on simple resampling. Used when no
@@ -197,18 +187,18 @@ public:
  */
 template<bool stereo, bool reverseStereo>
 LinearRateConverter<stereo, reverseStereo>::LinearRateConverter(st_rate_t inrate, st_rate_t outrate) {
-	if (inrate >= 131072 || outrate >= 131072) {
-		error("rate effect can only handle rates < 131072");
+	if (inrate >= 65536 || outrate >= 65536) {
+		error("rate effect can only handle rates < 65536");
 	}
 
-	opos = FRAC_ONE_LOW;
+	opos = FRAC_ONE;
 
 	// Compute the linear interpolation increment.
-	// This will overflow if inrate >= 2^17, and underflow if outrate >= 2^17.
+	// This will overflow if inrate >= 2^16, and underflow if outrate >= 2^16.
 	// Also, if the quotient of the two rate becomes too small / too big, that
 	// would cause problems, but since we rarely scale from 1 to 65536 Hz or vice
 	// versa, I think we can live with that limitation ;-).
-	opos_inc = (inrate << FRAC_BITS_LOW) / outrate;
+	opos_inc = (inrate << FRAC_BITS) / outrate;
 
 	ilast0 = ilast1 = 0;
 	icur0 = icur1 = 0;
@@ -230,7 +220,7 @@ int LinearRateConverter<stereo, reverseStereo>::flow(AudioStream &input, st_samp
 	while (obuf < oend) {
 
 		// read enough input samples so that opos < 0
-		while ((frac_t)FRAC_ONE_LOW <= opos) {
+		while ((frac_t)FRAC_ONE <= opos) {
 			// Check if we have to refill the buffer
 			if (inLen == 0) {
 				inPtr = inBuf;
@@ -245,17 +235,17 @@ int LinearRateConverter<stereo, reverseStereo>::flow(AudioStream &input, st_samp
 				ilast1 = icur1;
 				icur1 = *inPtr++;
 			}
-			opos -= FRAC_ONE_LOW;
+			opos -= FRAC_ONE;
 		}
 
 		// Loop as long as the outpos trails behind, and as long as there is
 		// still space in the output buffer.
-		while (opos < (frac_t)FRAC_ONE_LOW && obuf < oend) {
+		while (opos < (frac_t)FRAC_ONE && obuf < oend) {
 			// interpolate
 			st_sample_t out0, out1;
-			out0 = (st_sample_t)(ilast0 + (((icur0 - ilast0) * opos + FRAC_HALF_LOW) >> FRAC_BITS_LOW));
+			out0 = (st_sample_t)(ilast0 + (((icur0 - ilast0) * opos + FRAC_HALF) >> FRAC_BITS));
 			out1 = (stereo ?
-						  (st_sample_t)(ilast1 + (((icur1 - ilast1) * opos + FRAC_HALF_LOW) >> FRAC_BITS_LOW)) :
+						  (st_sample_t)(ilast1 + (((icur1 - ilast1) * opos + FRAC_HALF) >> FRAC_BITS)) :
 						  out0);
 
 			// output left channel
@@ -343,7 +333,7 @@ public:
 template<bool stereo, bool reverseStereo>
 RateConverter *makeRateConverter(st_rate_t inrate, st_rate_t outrate) {
 	if (inrate != outrate) {
-		if ((inrate % outrate) == 0 && (inrate < 65536)) {
+		if ((inrate % outrate) == 0) {
 			return new SimpleRateConverter<stereo, reverseStereo>(inrate, outrate);
 		} else {
 			return new LinearRateConverter<stereo, reverseStereo>(inrate, outrate);
diff --git a/audio/rate_arm.cpp b/audio/rate_arm.cpp
index 7765266..4ad8d71 100644
--- a/audio/rate_arm.cpp
+++ b/audio/rate_arm.cpp
@@ -68,16 +68,6 @@ namespace Audio {
  */
 #define INTERMEDIATE_BUFFER_SIZE 512
 
-/**
- * The default fractional type in frac.h (with 16 fractional bits) limits
- * the rate conversion code to 65536Hz audio: we need to able to handle
- * 96kHz audio, so we use fewer fractional bits in this code.
- */
-enum {
-	FRAC_BITS_LOW = 15,
-	FRAC_ONE_LOW = (1L << FRAC_BITS_LOW),
-	FRAC_HALF_LOW = (1L << (FRAC_BITS_LOW-1))
-};
 
 /**
  * Audio rate converter based on simple resampling. Used when no
@@ -297,18 +287,17 @@ LinearRateConverter<stereo, reverseStereo>::LinearRateConverter(st_rate_t inrate
 		error("Input and Output rates must be different to use rate effect");
 	}
 
-	if (inrate >= 131072 || outrate >= 131072) {
-		error("rate effect can only handle rates < 131072");
+	if (inrate >= 65536 || outrate >= 65536) {
+		error("rate effect can only handle rates < 65536");
 	}
 
-	lr.opos = FRAC_ONE_LOW;
+	lr.opos = FRAC_ONE;
 
 	/* increment */
-	incr = (inrate << FRAC_BITS_LOW) / outrate;
+	incr = (inrate << FRAC_BITS) / outrate;
 
 	lr.opos_inc = incr;
 
-	// FIXME: Does 32768 here need changing to 65536 or 0? Compare to rate.cpp code...
 	lr.ilast[0] = lr.ilast[1] = 32768;
 	lr.icur[0] = lr.icur[1] = 0;
 
@@ -449,7 +438,7 @@ public:
  */
 RateConverter *makeRateConverter(st_rate_t inrate, st_rate_t outrate, bool stereo, bool reverseStereo) {
 	if (inrate != outrate) {
-		if ((inrate % outrate) == 0 && (inrate < 65536)) {
+		if ((inrate % outrate) == 0) {
 			if (stereo) {
 				if (reverseStereo)
 					return new SimpleRateConverter<true, true>(inrate, outrate);
diff --git a/audio/rate_arm_asm.s b/audio/rate_arm_asm.s
index bb01c61..a727209 100644
--- a/audio/rate_arm_asm.s
+++ b/audio/rate_arm_asm.s
@@ -441,17 +441,17 @@ LinearRate_M_part2:
 
         LDRSH   r4, [r3]                @ r4 = obuf[0]
         LDRSH   r5, [r3,#2]             @ r5 = obuf[1]
-        MOV     r6, r6, ASR #15         @ r6 = tmp0 = tmp1 >>= 15
+        MOV     r6, r6, ASR #16         @ r6 = tmp0 = tmp1 >>= 16
         MUL     r7, r12,r6              @ r7 = tmp0*vol_l
         MUL     r6, r14,r6              @ r6 = tmp1*vol_r
 
-        ADDS    r7, r7, r4, LSL #15     @ r7 = obuf[0]<<15 + tmp0*vol_l
+        ADDS    r7, r7, r4, LSL #16     @ r7 = obuf[0]<<16 + tmp0*vol_l
         RSCVS   r7, r10, #0x80000000    @ Clamp r7
-        ADDS    r6, r6, r5, LSL #15     @ r6 = obuf[1]<<15 + tmp1*vol_r
+        ADDS    r6, r6, r5, LSL #16     @ r6 = obuf[1]<<16 + tmp1*vol_r
         RSCVS   r6, r10, #0x80000000    @ Clamp r6
 
-        MOV     r7, r7, LSR #15         @ Shift back to halfword
-        MOV     r6, r6, LSR #15         @ Shift back to halfword
+        MOV     r7, r7, LSR #16         @ Shift back to halfword
+        MOV     r6, r6, LSR #16         @ Shift back to halfword
 
         LDR     r5, [r2,#12]            @ r5 = opos_inc
         STRH    r7, [r3],#2             @ Store output value
@@ -538,23 +538,23 @@ LinearRate_S_part2:
         LDR     r7, [r2,#24]            @ r7 = ilast[1]<<16 + 32768
         LDRSH   r5, [r2,#18]            @ r5 = icur[1]
         LDRSH   r10,[r3]                @ r10= obuf[0]
-        MOV     r6, r6, ASR #15         @ r6 = tmp1 >>= 15
+        MOV     r6, r6, ASR #16         @ r6 = tmp1 >>= 16
         SUB     r5, r5, r7, ASR #16     @ r5 = icur[1] - ilast[1]
         MLA     r7, r4, r5, r7  @ r7 = (icur[1]-ilast[1])*opos_frac+ilast[1]
 
         LDRSH   r5, [r3,#2]             @ r5 = obuf[1]
-        MOV     r7, r7, ASR #15         @ r7 = tmp0 >>= 15
+        MOV     r7, r7, ASR #16         @ r7 = tmp0 >>= 16
         MUL     r7, r12,r7              @ r7 = tmp0*vol_l
         MUL     r6, r14,r6              @ r6 = tmp1*vol_r
 
-        ADDS    r7, r7, r10, LSL #15    @ r7 = obuf[0]<<15 + tmp0*vol_l
+        ADDS    r7, r7, r10, LSL #16    @ r7 = obuf[0]<<16 + tmp0*vol_l
         MOV     r4, #0
         RSCVS   r7, r4, #0x80000000     @ Clamp r7
-        ADDS    r6, r6, r5, LSL #15     @ r6 = obuf[1]<<15 + tmp1*vol_r
+        ADDS    r6, r6, r5, LSL #16     @ r6 = obuf[1]<<16 + tmp1*vol_r
         RSCVS   r6, r4, #0x80000000     @ Clamp r6
 
-        MOV     r7, r7, LSR #15         @ Shift back to halfword
-        MOV     r6, r6, LSR #15         @ Shift back to halfword
+        MOV     r7, r7, LSR #16         @ Shift back to halfword
+        MOV     r6, r6, LSR #16         @ Shift back to halfword
 
         LDR     r5, [r2,#12]            @ r5 = opos_inc
         STRH    r7, [r3],#2             @ Store output value
@@ -641,23 +641,23 @@ LinearRate_R_part2:
         LDR     r7, [r2,#24]            @ r7 = ilast[1]<<16 + 32768
         LDRSH   r5, [r2,#18]            @ r5 = icur[1]
         LDRSH   r10,[r3,#2]             @ r10= obuf[1]
-        MOV     r6, r6, ASR #15         @ r6 = tmp1 >>= 15
+        MOV     r6, r6, ASR #16         @ r6 = tmp1 >>= 16
         SUB     r5, r5, r7, ASR #16     @ r5 = icur[1] - ilast[1]
         MLA     r7, r4, r5, r7  @ r7 = (icur[1]-ilast[1])*opos_frac+ilast[1]
 
         LDRSH   r5, [r3]                @ r5 = obuf[0]
-        MOV     r7, r7, ASR #15         @ r7 = tmp0 >>= 15
+        MOV     r7, r7, ASR #16         @ r7 = tmp0 >>= 16
         MUL     r7, r12,r7              @ r7 = tmp0*vol_l
         MUL     r6, r14,r6              @ r6 = tmp1*vol_r
 
-        ADDS    r7, r7, r10, LSL #15    @ r7 = obuf[1]<<15 + tmp0*vol_l
+        ADDS    r7, r7, r10, LSL #16    @ r7 = obuf[1]<<16 + tmp0*vol_l
         MOV     r4, #0
         RSCVS   r7, r4, #0x80000000     @ Clamp r7
-        ADDS    r6, r6, r5, LSL #15     @ r6 = obuf[0]<<15 + tmp1*vol_r
+        ADDS    r6, r6, r5, LSL #16     @ r6 = obuf[0]<<16 + tmp1*vol_r
         RSCVS   r6, r4, #0x80000000     @ Clamp r6
 
-        MOV     r7, r7, LSR #15         @ Shift back to halfword
-        MOV     r6, r6, LSR #15         @ Shift back to halfword
+        MOV     r7, r7, LSR #16         @ Shift back to halfword
+        MOV     r6, r6, LSR #16         @ Shift back to halfword
 
         LDR     r5, [r2,#12]            @ r5 = opos_inc
         STRH    r6, [r3],#2             @ Store output value
diff --git a/backends/events/sdl/sdl-events.cpp b/backends/events/sdl/sdl-events.cpp
index 745f398..bd4110e 100644
--- a/backends/events/sdl/sdl-events.cpp
+++ b/backends/events/sdl/sdl-events.cpp
@@ -30,6 +30,10 @@
 #include "common/config-manager.h"
 #include "common/textconsole.h"
 
+#if defined(ANDROIDSDL)
+#include <SDL_screenkeyboard.h>
+#endif
+
 // FIXME move joystick defines out and replace with confile file options
 // we should really allow users to map any key to a joystick button
 #define JOY_DEADZONE 3200
@@ -647,7 +651,22 @@ bool SdlEventSource::handleMouseButtonDown(SDL_Event &ev, Common::Event &event)
 #endif
 #if defined(SDL_BUTTON_MIDDLE)
 	else if (ev.button.button == SDL_BUTTON_MIDDLE)
+	{
 		event.type = Common::EVENT_MBUTTONDOWN;
+#ifdef ANDROIDSDL
+		static int show_onscreen=0;
+		if (show_onscreen==0) {
+		    SDL_ANDROID_SetScreenKeyboardShown(0);
+		    show_onscreen++;
+		}
+		else if (show_onscreen==1) {
+		    SDL_ANDROID_SetScreenKeyboardShown(1);
+		    show_onscreen++;
+		}
+		if (show_onscreen==2)
+		    show_onscreen=0;
+#endif
+	}
 #endif
 	else
 		return false;
@@ -847,6 +866,54 @@ bool SdlEventSource::remapKey(SDL_Event &ev, Common::Event &event) {
 		event.kbd.ascii = mapKey(ev.key.keysym.sym, ev.key.keysym.mod, ev.key.keysym.unicode);
 	}
 #endif
+
+#ifdef ANDROIDSDL
+	if (ev.key.keysym.sym == SDLK_LCTRL) {
+		ev.key.keysym.sym = SDLK_F5;
+
+	} else if (ev.key.keysym.sym == SDLK_RCTRL) {
+		// volume down to pressing Right Mouse
+		if (ev.key.type == SDL_KEYDOWN ) {
+			event.type = Common::EVENT_LBUTTONDOWN;
+		} else {
+			event.type = Common::EVENT_LBUTTONUP;
+		}
+		processMouseEvent(event, _km.x, _km.y);
+
+		return true;
+
+	} else if (ev.key.keysym.sym == SDLK_LALT) {
+		// volume down to pressing Right Mouse
+		if (ev.key.type == SDL_KEYDOWN ) {
+			event.type = Common::EVENT_RBUTTONDOWN;
+		} else {
+			event.type = Common::EVENT_RBUTTONUP;
+		}
+		processMouseEvent(event, _km.x, _km.y);
+
+		return true;
+	} else if (ev.key.keysym.sym == SDLK_RALT) {
+		if (ev.type == SDL_KEYDOWN) {
+			_km.y_vel = -999;
+			_km.y_down_count = 1;
+		} else {
+			_km.y_vel = 0;
+			_km.y_down_count = 0;
+		}
+
+		event.type = Common::EVENT_MOUSEMOVE;
+		processMouseEvent(event, _km.x, _km.y);
+
+		return true;
+	} else {
+		// Let the events fall through if we didn't change them, this may not be the best way to
+		// set it up, but i'm not sure how sdl would like it if we let if fall through then redid it though.
+		// and yes i have an huge terminal size so i dont wrap soon enough.
+		event.type = Common::EVENT_KEYDOWN;
+		event.kbd.keycode = (Common::KeyCode)ev.key.keysym.sym;
+		event.kbd.ascii = mapKey(ev.key.keysym.sym, ev.key.keysym.mod, ev.key.keysym.unicode);
+	}
+#endif
 	return false;
 }
 
diff --git a/backends/vkeybd/virtual-keyboard.cpp b/backends/vkeybd/virtual-keyboard.cpp
index ce19e9d..9bf4ff7 100644
--- a/backends/vkeybd/virtual-keyboard.cpp
+++ b/backends/vkeybd/virtual-keyboard.cpp
@@ -20,6 +20,10 @@
  *
  */
 
+#if defined(ANDROIDSDL)
+#include <SDL_screenkeyboard.h>
+#endif
+
 #include "common/scummsys.h"
 
 #ifdef ENABLE_VKEYBD
@@ -232,7 +236,9 @@ void VirtualKeyboard::show() {
 	} else {
 		_kbdGUI->checkScreenChanged();
 	}
-
+#ifdef ANDROIDSDL
+	SDL_ANDROID_SetScreenKeyboardShown(0);
+#endif  
 	switchMode(_initialMode);
 	_kbdGUI->run();
 
@@ -256,6 +262,9 @@ void VirtualKeyboard::show() {
 }
 
 void VirtualKeyboard::close(bool submit) {
+#ifdef ANDROIDSDL
+	SDL_ANDROID_SetScreenKeyboardShown(1);
+#endif  
 	_submitKeys = submit;
 	_kbdGUI->close();
 }
diff --git a/configure b/configure
index 24449d6..e4720fe 100755
--- a/configure
+++ b/configure
@@ -864,6 +864,7 @@ Special configuration feature:
                           special targets: android-arm for Android ARM
                                            android-mips for Android MIPS
                                            android-x86 for Android x86
+                                           androidsdl for Android with SDL backend
                                            tizen for Samsung Tizen
                                            caanoo for Caanoo
                                            dingux for Dingux
@@ -1303,6 +1304,11 @@ android-x86)
 	_host_cpu=i686
 	_host_alias=i686-linux-android
 	;;
+androidsdl | androidsdl-v7a)
+	_host_os=androidsdl
+	_host_cpu=arm
+	_host_alias=arm-linux-androideabi
+	;;
 arm-riscos)
 	_host_os=riscos
 	_host_cpu=arm
@@ -1825,7 +1831,7 @@ if test "$have_gcc" = yes ; then
 			case $_host_os in
 			# newlib-based system include files suppress non-C89 function
 			# declarations under __STRICT_ANSI__
-			amigaos* | android | dreamcast | ds | gamecube | mingw* | n64 | psp | ps2 | ps3 | tizen | wii | wince )
+			amigaos* | android | androidsdl | dreamcast | ds | gamecube | mingw* | n64 | psp | ps2 | ps3 | tizen | wii | wince )
 				;;
 			*)
 				append_var CXXFLAGS "-ansi"
@@ -1861,7 +1867,7 @@ echo $_use_cxx11
 # However, some platforms use GNU extensions in system header files, so
 # for these we must not use -pedantic.
 case $_host_os in
-android | gamecube | psp | tizen | wii | webos)
+android | androidsdl | gamecube | psp | tizen | wii | webos)
 	;;
 *)
 	# ICC does not support pedantic, while GCC and clang do.
@@ -2560,6 +2566,15 @@ if test -n "$_host"; then
 			_mt32emu=no
 			_timidity=no
 			;;
+		androidsdl  | androidsdl-v7a)
+			DEFINES="$DEFINES -DANDROIDSDL"
+			_unix=yes
+			_build_hq_scalers=yes
+			_vkeybd=yes
+			_seq_midi=no
+			_mt32emu=no
+			_timidity=no
+			;;
 		arm-linux|arm*-linux-gnueabi|arm-*-linux)
 			;;
 		arm-riscos|linupy)
@@ -3165,7 +3180,7 @@ append_var MODULES "backends/platform/$_backend"
 # Setup SDL specifics for SDL based backends
 #
 case $_backend in
-	dingux | gph | linuxmoto | maemo | openpandora | samsungtv | sdl)
+	androidsdl | dingux | gph | linuxmoto | maemo | openpandora | samsungtv | sdl)
 		find_sdlconfig
 		append_var INCLUDES "`$_sdlconfig --prefix="$_sdlpath" --cflags`"
 		append_var LIBS "`$_sdlconfig --prefix="$_sdlpath" --libs`"
@@ -3188,7 +3203,7 @@ esac
 # Enable 16bit support only for backends which support it
 #
 case $_backend in
-	android | dingux | dc | gph | iphone | ios7 | maemo | openpandora | psp | samsungtv | sdl | tizen | webos | wii)
+	android | androidsdl | dingux | dc | gph | iphone | ios7 | maemo | openpandora | psp | samsungtv | sdl | tizen | webos | wii)
 		if test "$_16bit" = auto ; then
 			_16bit=yes
 		else
@@ -3247,7 +3262,7 @@ case $_host_os in
 	amigaos* | cygwin* | dreamcast | ds | gamecube | mingw* | n64 | ps2 | ps3 | psp | wii | wince)
 		_posix=no
 		;;
-	android | beos* | bsd* | darwin* | freebsd* | gnu* | gph-linux | haiku* | hpux* | iphone | ios7 | irix*| k*bsd*-gnu* | linux* | maemo | mint* | netbsd* | openbsd* | solaris* | sunos* | uclinux* | webos)
+	android | androidsdl | beos* | bsd* | darwin* | freebsd* | gnu* | gph-linux | haiku* | hpux* | iphone | ios7 | irix*| k*bsd*-gnu* | linux* | maemo | mint* | netbsd* | openbsd* | solaris* | sunos* | uclinux* | webos)
 		_posix=yes
 		;;
 	os2-emx*)
diff --git a/gui/dialog.cpp b/gui/dialog.cpp
index 315c24e..44046c2 100644
--- a/gui/dialog.cpp
+++ b/gui/dialog.cpp
@@ -20,6 +20,10 @@
  *
  */
 
+#if defined(ANDROIDSDL)
+#include <SDL_screenkeyboard.h>
+#endif
+
 #include "common/rect.h"
 
 #ifdef ENABLE_KEYMAPPER
@@ -82,6 +86,9 @@ int Dialog::runModal() {
 void Dialog::open() {
 	_result = 0;
 	_visible = true;
+#ifdef ANDROIDSDL
+	SDL_ANDROID_SetScreenKeyboardShown(0);
+#endif
 	g_gui.openDialog(this);
 
 	Widget *w = _firstWidget;
@@ -95,7 +102,9 @@ void Dialog::open() {
 
 void Dialog::close() {
 	_visible = false;
-
+#ifdef ANDROIDSDL
+	SDL_ANDROID_SetScreenKeyboardShown(1);
+#endif
 	if (_mouseWidget) {
 		_mouseWidget->handleMouseLeft(0);
 		_mouseWidget = 0;
diff --git a/gui/saveload-dialog.cpp b/gui/saveload-dialog.cpp
index a333c5f..626b035 100644
--- a/gui/saveload-dialog.cpp
+++ b/gui/saveload-dialog.cpp
@@ -20,6 +20,10 @@
  *
  */
 
+#if defined(ANDROIDSDL)
+#include <SDL_screenkeyboard.h>
+#endif
+
 #include "gui/saveload-dialog.h"
 #include "common/translation.h"
 #include "common/config-manager.h"
@@ -434,6 +438,10 @@ void SaveLoadChooserSimple::updateSelection(bool redraw) {
 
 void SaveLoadChooserSimple::open() {
 	SaveLoadChooserDialog::open();
+	
+#ifdef ANDROIDSDL
+	SDL_ANDROID_SetScreenKeyboardShown(1);
+#endif
 
 	// Scroll the list to the last used entry.
 	_list->scrollTo(ConfMan.getInt("gui_saveload_last_pos"));
@@ -943,7 +951,11 @@ const Common::String &SavenameDialog::getDescription() {
 }
 
 void SavenameDialog::open() {
+
 	Dialog::open();
+#ifdef ANDROIDSDL
+	SDL_ANDROID_SetScreenKeyboardShown(1);
+#endif
 	setResult(-1);
 
 	_title->setLabel(Common::String::format(_("Enter a description for slot %d:"), _targetSlot));
diff --git a/ports.mk b/ports.mk
index fa38084..a618339 100644
--- a/ports.mk
+++ b/ports.mk
@@ -469,5 +469,19 @@ raspberrypi_dist:
 	zip -r scummvm-rpi.zip scummvm-rpi
 	rm -f -R scummvm-rpi
 
+#
+# Android pelya's SDL-backend based port
+#
+
+# Special target to create an AndroidSDL snapshot installation
+androidsdl: 
+	$(MKDIR) release
+	$(INSTALL) -c -m 644 $(DIST_FILES_THEMES) $(DIST_FILES_ENGINEDATA) release
+	$(INSTALL) -c -m 644 $(DIST_FILES_DOCS)  release
+	$(CP) $(srcdir)/backends/vkeybd/packs/vkeybd_default.zip release
+	zip -j scummvm190-git-appdata.zip release/*
+	split -d -b 1000000 scummvm190-git-appdata.zip scummvm190-git-appdata.zip0
+	$(RM) -r scummvm190-git-appdata.zip
+
 # Mark special targets as phony
-.PHONY: deb bundle osxsnap win32dist install uninstall
+.PHONY: deb bundle osxsnap win32dist install uninstall androidsdl
